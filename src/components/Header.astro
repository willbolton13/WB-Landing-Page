---
// --- All the code in the top section remains the same ---
import { getLocations } from '../lib/contentful';

const locations = await getLocations();
locations.sort((a, b) => a.fields.locationName.localeCompare(b.fields.locationName));

const locationNameMap = locations.reduce((acc, loc) => {
  const slug = loc.fields.locationName.toLowerCase().replace(/\s+/g, '-');
  acc[slug] = loc.fields.locationName;
  return acc;
}, {});

const currentPath = Astro.url.pathname;
const locationMatch = currentPath.match(/\/location\/(.+)/);
const currentLocationSlug = locationMatch ? locationMatch[1] : null;

const currentLocationName = currentLocationSlug ? locationNameMap[currentLocationSlug] : null;
---

<header class="py-3">
    <div class="container d-flex justify-content-between align-items-center">
        <a href="https://waterbear.org.uk/" target="_blank" rel="noopener noreferrer">
            <img src="/img/white-hori@4x.png" alt="University Logo" style="height: 50px;">
        </a>
        
        <div class="location-status d-none d-md-flex align-items-center gap-2">
            
            <i class="bi bi-geo-alt-fill text-warning"></i>
            {currentLocationName ?
                (
                <span>Campus: <strong class="text-warning">{currentLocationName}</strong></span>
            ) : (
                <span><strong>Select your campus to get started</strong></span>
            )}
        </div>
        
        <button 
            class="location-hamburger-btn d-flex align-items-center gap-2" 
            type="button" 
            data-bs-toggle="offcanvas" 
            data-bs-target="#offcanvasNavbar" 
            aria-controls="offcanvasNavbar" 
            aria-label="Toggle navigation"
        >
            {currentLocationName ? 'Change' : 'Select'} Campus
            <i class="bi bi-list fs-5"></i>
        </button>
        
        <div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasNavbar" aria-labelledby="offcanvasNavbarLabel">
            <div class="offcanvas-header">
                <h5 class="offcanvas-title" id="offcanvasNavbarLabel">SELECT YOUR CAMPUS</h5>
                <button type="button" class="btn-close" data-bs-dismiss="offcanvas" 
                    aria-label="Close"></button>
            </div>
            
            <div class="offcanvas-body location-list">
                {locations.map((location) => {
                    const slug = location.fields.locationName.toLowerCase().replace(/\s+/g, '-');
                    return (
                        <a href={`/location/${slug}`} class="location-item">
                            {location.fields.locationName}
                        </a>
                    );
                })}
            </div>
            
            <div class="offcanvas-footer">
                <div class="extra-links-buttons">
                    <a href="#" class="btn-extra-link">Extra Link 1</a>
                    <a href="#" class="btn-extra-link">Extra Link 2</a>
                    <a href="#" class="btn-extra-link">Extra Link 3</a>
                    <a href="#" class="btn-extra-link">Extra Link 4</a>
                </div>
                <a href="https://login.microsoftonline.com/common/oauth2/v2.0/logout" class="btn-logout">LOG OUT</a>
            </div>
        </div>
    </div>
</header>

<style>
  /* All existing styles remain the same */
  header {
    position: relative;
    z-index: 10;
    background-color: var(--header-color);
  }

  header .container {
    padding-right: 15px;
  }

  .location-status {
    color: var(--text-color);
    font-size: 0.9rem;
  }

  .location-status .bi-geo-alt-fill {
    color: var(--accent-yellow);
  }

  .location-status .text-warning {
    color: var(--accent-yellow) !important;
  }

  .location-hamburger-btn {
    background-color: var(--accent-yellow);
    border: none;
    color: var(--button-text-color);
    padding: 0.5rem 1rem;
    font-size: 0.9rem;
    font-weight: 700;
    border-radius: 5px;
    transition: all 0.2s ease-in-out;
  }

  .location-hamburger-btn:hover {
    background-color: var(--text-color);
    color: var(--button-text-color);
    transform: scale(1.05);
  }

  .navbar-toggler {
    border: none;
    padding: 0;
  }

  .navbar-toggler:hover {
    filter: brightness(.3);
  }

  .offcanvas {
    background-color: var(--accent-yellow);
    color: var(--button-text-color);
  }

  .offcanvas-header {
    border-bottom: 2px solid var(--button-text-color);
    padding: 1.5rem;
  }

  .offcanvas-title {
    color: var(--button-text-color);
    font-weight: 700;
    font-size: 1.2rem;
    letter-spacing: 1px;
  }

  .offcanvas .btn-close {
    filter: none;
    opacity: 1;
    font-size: 1.5rem;
  }

  .location-list {
    padding: 2rem 1.5rem;
    flex-grow: 1;
    overflow-y: auto;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .location-item {
    display: block;
    padding: 1rem 0;
    font-size: 2rem;
    font-weight: 700;
    color: var(--button-text-color);
    text-decoration: none;
    text-transform: uppercase;
    transition: all 0.2s ease-in-out;
    border-bottom: 2px solid transparent;
  }

  .location-item:hover {
    transform: translateX(10px);
    border-bottom-color: var(--button-text-color);
  }

  .offcanvas-footer {
    padding: 1.5rem;
    border-top: 2px solid var(--button-text-color);
    background-color: var(--accent-yellow);
  }

  .extra-links-buttons {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 0.75rem;
    margin-bottom: 1rem;
  }

  .btn-extra-link {
    padding: 0.75rem 1rem;
    border: 2px solid var(--button-text-color);
    background-color: transparent;
    color: var(--button-text-color);
    text-align: center;
    text-decoration: none;
    font-weight: 700;
    font-size: 0.9rem;
    border-radius: 5px;
    transition: all 0.2s ease-in-out;
  }

  .btn-extra-link:hover {
    background-color: var(--button-text-color);
    color: var(--accent-yellow);
  }

  .btn-logout {
    display: block;
    width: 100%;
    padding: 1rem;
    background-color: var(--button-text-color);
    color: var(--accent-yellow);
    text-align: center;
    text-decoration: none;
    font-weight: 700;
    font-size: 1.1rem;
    border-radius: 5px;
    border: none;
    transition: all 0.2s ease-in-out;
  }

  .btn-logout:hover {
    background-color: var(--accent-red);
    color: var(--text-color);
    transform: scale(1.02);
  }

  @media (max-width: 768px) {
    .location-hamburger-btn {
      font-size: 0.8rem;
      padding: 0.4rem 0.8rem;
    }
    
    header .container {
      gap: 0.5rem;
    }
    
    header img {
      height: 40px !important;
    }
  }
</style>

<script>
  import { navigate } from 'astro:transitions/client';

  function setupOffcanvasNavigation() {
    const offcanvasElement = document.getElementById('offcanvasNavbar');
    if (!offcanvasElement || offcanvasElement.dataset.navListenerAttached) {
      return; // Exit if no offcanvas or if listeners are already on
    }
    offcanvasElement.dataset.navListenerAttached = 'true';

    const locationLinks = offcanvasElement.querySelectorAll('.location-item');
    const bsOffcanvas = new bootstrap.Offcanvas(offcanvasElement);

    locationLinks.forEach(link => {
      link.addEventListener('click', (event) => {
        // 1. Prevent the link from navigating immediately
        event.preventDefault();
        const targetUrl = link.getAttribute('href');

        // 2. Listen for the 'hidden' event, which fires AFTER the closing animation
        offcanvasElement.addEventListener('hidden.bs.offcanvas', () => {
          // 4. Once hidden, navigate to the new page
          navigate(targetUrl);
        }, { once: true }); // Use {once: true} so this listener only runs once

        // 3. Manually trigger the offcanvas to close
        bsOffcanvas.hide();
      });
    });
  }

  // Run this setup after every page load, including client-side navigations
  document.addEventListener('astro:page-load', setupOffcanvasNavigation);
</script>