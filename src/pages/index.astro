---
import Layout from '../layouts/Layout.astro';
import StaticPortalCards from '../components/StaticPortalCards.astro';
import { getLocations } from '../lib/contentful';

// Fetch locations from Contentful
const locations = await getLocations();

// Sort locations alphabetically
locations.sort((a, b) => {
  const nameA = a.fields.locationName || '';
  const nameB = b.fields.locationName || '';
  return nameA.localeCompare(nameB);
});
---

<Layout title="WaterBear Student Portal">
    
    <section class="hero-section">
        <img src="/img/hn-1536x796.jpg.webp" alt="Hero image">
    </section>
    
    <main class="container my-5">
        <div class="text-center mb-5">
            <h1 class="display-4">Welcome to your student portal</h1>
            <p class="lead location-prompt">Select a location to get started.</p>
            
            <div class="col-lg-6 mx-auto">
                <select class="form-select" id="location-select" aria-label="Select a location">
                    <option selected disabled>Choose your campus...</option>
                    {locations.map((location) => (
                        <option value={location.fields.locationName}>
                            {location.fields.locationName}
                        </option>
                    ))}
                </select>
            </div>
        </div>
        
        <!-- Use the StaticPortalCards component -->
        <StaticPortalCards />
    </main>
</Layout>

<style>
  /* Hero section styles */
  .hero-section {
    height: 55vh;
    overflow: hidden;
    position: relative;
    z-index: 1;
  }

  .hero-section img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
  }

  main.container {
    position: relative;
    z-index: 2;
    margin-top: -40vh !important;
  }

  /* Typography */
  h1, .lead {
    color: var(--text-color);
    text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.8);
  }

  .location-prompt {
    color: var(--accent-yellow);
    font-weight: 500;
    text-shadow: 3px 3px 3px rgba(0, 0, 0, 0.7);
    font-size: 1.6rem;
    text-transform: uppercase;
  }

  .display-4 {
    font-weight: 700;
    text-transform: uppercase;
  }

  /* Form select dropdown */
  .form-select {
    background-color: var(--header-color);
    color: var(--text-color);
    border: 2px solid var(--accent-yellow);
    font-size: 1.1rem;
    font-weight: 700;
    text-align: center;
    padding: .5rem;
  }

  .form-select option {
    background: var(--header-color);
    color: var(--text-color);
  }

  .form-select:focus {
    background-color: var(--header-color);
    color: var(--text-color);
    border-color: #ffffff;
    box-shadow: 0 0 0 0.25rem rgba(253, 226, 0, 0.25);
  }

  /* Responsive styles */
  @media (max-width: 992px) {
    .location-prompt {
      font-size: 1.4rem;
    }
  }

  @media (max-width: 768px) {
    .location-prompt {
      font-size: 1.2rem;
    }
  }
</style>


<script>
  import { navigate } from 'astro:transitions/client';

  // 1. Wrap your logic in a function
  function setupHomepage() {
    const locationSelect = document.getElementById('location-select');

    // 2. Important: a flag to prevent multiple listeners
    if (locationSelect.dataset.listenerAttached) {
      return;
    }
    locationSelect.dataset.listenerAttached = 'true';

    locationSelect?.addEventListener('change', (e) => {
      const value = (e.target as HTMLSelectElement).value;
      if (value && value !== 'Choose your campus...') {
        const slug = value.toLowerCase().replace(/\s+/g, '-');
        navigate(`/location/${slug}`);
      }
    });
  }

  // 3. Call the function on page load
  document.addEventListener('astro:page-load', setupHomepage);
</script>